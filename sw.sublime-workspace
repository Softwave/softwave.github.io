{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"height",
				"min-height"
			],
			[
				"masth",
				"masthead-title"
			],
			[
				"chas",
				"chassisBody"
			],
			[
				"cha",
				"chassisShape"
			],
			[
				"vert",
				"vertexHeight"
			],
			[
				"h",
				"heightfieldShape"
			],
			[
				"chass",
				"chassisBody"
			],
			[
				"ground",
				"groundStiffness"
			],
			[
				"groun",
				"groundFric"
			],
			[
				"gro",
				"groundMaterial"
			],
			[
				"rend",
				"renderer"
			],
			[
				"frag",
				"fragShader"
			],
			[
				"tex",
				"text-decoration"
			],
			[
				"verti",
				"verticesNeedUpdate"
			],
			[
				"atm",
				"atmosSize"
			],
			[
				"rin",
				"ringY"
			],
			[
				"sh",
				"showAtmosphere"
			],
			[
				"sun",
				"sunColor"
			],
			[
				"sunPo",
				"sunPosZ"
			],
			[
				"su",
				"sunPosX"
			],
			[
				"clou",
				"cloudGeom"
			],
			[
				"at",
				"atmosColor"
			],
			[
				"li",
				"lightIntensity"
			],
			[
				"in",
				"intensity"
			],
			[
				"ren",
				"renderColor"
			],
			[
				"ring",
				"ringColor"
			],
			[
				"st",
				"start_app"
			],
			[
				"js",
				"jsonNoodle"
			],
			[
				"inte",
				"intersect"
			],
			[
				"ray",
				"ray"
			],
			[
				"mat",
				"materialThing"
			],
			[
				"m",
				"multiplyScalar"
			],
			[
				"glo",
				"glowColor"
			],
			[
				"atmo",
				"atmosColor"
			],
			[
				"glow",
				"glowMat"
			],
			[
				"po",
				"point_light"
			],
			[
				"ma",
				"margin-top"
			],
			[
				"margin-",
				"margin-bottom"
			],
			[
				"FIlls",
				"FillScaleMode	flixel.system.scaleModes"
			],
			[
				"is",
				"isLowCarb	Bool"
			],
			[
				"sand",
				"sandwichType	String"
			],
			[
				"FlxSpri",
				"FlxSpriteGroup	class"
			],
			[
				"MouseEven",
				"MouseEventManager	flixel.plugin"
			],
			[
				"Flx",
				"FlxTilemap	class"
			],
			[
				"bulle",
				"bulletGibs"
			],
			[
				"tankG",
				"tankGibs"
			],
			[
				"ship",
				"shipBeam"
			],
			[
				"bullet",
				"bulletGroup"
			],
			[
				"acceleration",
				"ACCELERATION"
			],
			[
				"font",
				"font-weight"
			],
			[
				"time",
				"time_passed"
			],
			[
				"new",
				"new_time"
			],
			[
				"back",
				"background-color"
			],
			[
				"foo",
				"foodGibs	var"
			],
			[
				"ob",
				"obj2	var"
			],
			[
				"pi",
				"pickups	var"
			],
			[
				"reg",
				"region1	var"
			],
			[
				"pl",
				"play(...)	flixel.system.FlxSound"
			],
			[
				"c",
				"crawl"
			],
			[
				"FlxTyped",
				"FlxTypedGroup	flixel.group"
			],
			[
				"pra",
				"prariedog"
			],
			[
				"pr",
				"prariedog"
			],
			[
				"twee",
				"tweenInfo"
			],
			[
				"twe",
				"tweenFadeState"
			],
			[
				"crea",
				"createLayer"
			],
			[
				"up",
				"updateMsg"
			],
			[
				"jum",
				"jumpleft"
			],
			[
				"coll",
				"collideWorldBounds"
			],
			[
				"get",
				"getType"
			],
			[
				"num",
				"numRoids"
			],
			[
				"play",
				"playerGlow"
			],
			[
				"gam",
				"gameoverTxt"
			],
			[
				"pG",
				"playerGibs"
			],
			[
				"ang",
				"angV"
			],
			[
				"roi",
				"roidGibs"
			],
			[
				"proto",
				"prototype"
			],
			[
				"bl",
				"blendModes"
			],
			[
				"pla",
				"playerGlow"
			],
			[
				"blendm",
				"blendModes"
			],
			[
				"an",
				"angularVelocity"
			],
			[
				"setF",
				"setFireRate( Rate : Int )	Void"
			],
			[
				"collidedu",
				"collideDudeGun	function"
			],
			[
				"fire",
				"fireAtTarget(...)	Bool"
			],
			[
				"apes",
				"apesTaken	Int"
			],
			[
				"blur",
				"playerBlur	var"
			],
			[
				"samp",
				"samplesTaken	Int"
			],
			[
				"ape",
				"apesKilled	Int"
			],
			[
				"ap",
				"apesTaken	Int"
			],
			[
				"w",
				"wordWrap	Bool"
			],
			[
				"player",
				"playerText	var"
			],
			[
				"cows",
				"cowsTaken	Int"
			],
			[
				"col",
				"bgColor	Int"
			],
			[
				"temp",
				"tempGun	var"
			],
			[
				"tempC",
				"tempCop	var"
			],
			[
				"copG",
				"copGun	var"
			],
			[
				"setBu",
				"setBulletBounds(...)	Void"
			],
			[
				"sc",
				"screenX	Int"
			],
			[
				"fi",
				"fireAtTarget(...)	Bool"
			],
			[
				"fir",
				"fireAtMouse()	Bool"
			],
			[
				"make",
				"makePixelBullet(...)	Void"
			],
			[
				"f",
				"fireAtTarget(...)	Bool"
			],
			[
				"beam",
				"beamOn	Bool"
			],
			[
				"FlxType",
				"FlxTypedGroup	flixel.group"
			],
			[
				"flxs",
				"FlxSpriteGroup	class"
			],
			[
				"Fl",
				"FlxTilemap	class"
			],
			[
				"al",
				"alpha	Float"
			],
			[
				"Np",
				"NPC	class"
			],
			[
				"b",
				"bGibs	flixel.effects.particles.FlxEmitter"
			],
			[
				"k",
				"kGibs	var"
			],
			[
				"B",
				"Bullet	class"
			],
			[
				"flxty",
				"FlxTypedGroup	flixel.group"
			],
			[
				"days",
				"daysLeft	var"
			],
			[
				"P",
				"PINGPONG	Int"
			],
			[
				"qu",
				"queenWave	var"
			],
			[
				"pix",
				"framePixels	flash.display.BitmapData"
			],
			[
				"q",
				"quadPath(...)	flixel.tweens.motion.QuadPath"
			],
			[
				"playe",
				"playerText	var"
			],
			[
				"Flxtile",
				"FlxTilemap	flixel.tile"
			],
			[
				"wa",
				"waving"
			],
			[
				"he",
				"height	Float"
			],
			[
				"FlxTex",
				"FlxTextField	class"
			],
			[
				"FlxTe",
				"FlxTextField	flixel.text"
			],
			[
				"va",
				"VarTween	class"
			],
			[
				"FlxSpr",
				"FlxSpriteGroup	flixel.group"
			],
			[
				"FlxSp",
				"FlxSpriteGroup	flixel.group"
			],
			[
				"tre",
				"threshold(...)	UInt"
			],
			[
				"plan",
				"plantSprite	var"
			],
			[
				"cl",
				"clouds	var"
			]
		]
	},
	"buffers":
	[
		{
			"file": "_config.yml",
			"settings":
			{
				"buffer_size": 642,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2014-01-01-example-content.md",
			"settings":
			{
				"buffer_size": 4576,
				"line_ending": "Windows"
			}
		},
		{
			"file": "_posts/2014-10-12-newsite.md",
			"settings":
			{
				"buffer_size": 205,
				"line_ending": "Unix"
			}
		},
		{
			"file": "_posts/2015-02-23-updated.md",
			"settings":
			{
				"buffer_size": 75,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Grunt Build",
	"command_palette":
	{
		"height": 247.0,
		"selected_items":
		[
			[
				"html",
				"Snippet: Blank HTML Page"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"packagecon",
				"Package Control: Install Package"
			],
			[
				"installp",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"htm",
				"Snippet: Blank HTML Page"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"html5",
				"Snippet: Simple HTML5 Boilerplate"
			],
			[
				"mit",
				"Licence Snippet: MIT"
			],
			[
				"li",
				"Licence Snippet: MIT"
			],
			[
				"button",
				"Snippet: bs3-button-group"
			],
			[
				"bs3",
				"Snippet: bs3-input-color"
			],
			[
				"butt",
				"Snippet: bs3-button-primary"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"colo",
				"Color picker"
			],
			[
				"color",
				"Color picker"
			],
			[
				"c",
				"Color picker"
			],
			[
				"fli",
				"Snippet: flixelEmbed"
			],
			[
				"flixe",
				"Snippet: flixelEmbed"
			],
			[
				"flixel",
				"Snippet: flixelEmbed"
			],
			[
				"pure",
				"Snippet: pureButton"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"col",
				"Snippet: bs3-col-3"
			],
			[
				"row",
				"Snippet: bs3-row"
			],
			[
				"image",
				"Snippet: bs3-image"
			],
			[
				"footer",
				"Snippet: bs3-panel-footer"
			],
			[
				"conta",
				"Snippet: bs3-container"
			],
			[
				"nav",
				"Snippet: bs3-navbar-basic"
			],
			[
				"lore",
				"Snippet: Lorem ipsum"
			],
			[
				"panel",
				"Snippet: bs3-panel-heading"
			],
			[
				"bs",
				"Snippet: bs3-container"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: html"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 118.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/Discovery/Library/Application Support/Sublime Text 2/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/Users/Discovery/Library/Application Support/Sublime Text 2/Packages/User/SublimeCodeIntel.sublime-settings",
		"/Users/Discovery/Softwave/jekyll/hpstr/_posts/2014-10-12-newsite-post.md",
		"/Users/Discovery/Softwave/lanyon/public/css/lanyon.css",
		"/Users/Discovery/Softwave/lanyon/_layouts/default.html",
		"/Users/Discovery/Softwave/lanyon/public/css/style.css",
		"/Users/Discovery/LiveCoding/Old/Finished/spiral/Main.js",
		"/Users/Discovery/Softwave/site/c.txt",
		"/Users/Discovery/Softwave/lanyon/_layouts/page.html",
		"/Users/Discovery/Softwave/lanyon/_layouts/post.html",
		"/Users/Discovery/Softwave/lanyon/_includes/head.html",
		"/Users/Discovery/Softwave/site/index.html",
		"/Users/Discovery/Softwave/dl/Skeleton-2.0.4/index.html",
		"/Users/Discovery/Softwave/site/config.rb",
		"/Users/Discovery/Softwave/site/style.css",
		"/Users/Discovery/Softwave/site/style.scss",
		"/Users/Discovery/Softwave/site/css/style.scss",
		"/Users/Discovery/Softwave/site/Gemfile",
		"/Users/Discovery/Softwave/shiori/Gemfile",
		"/Users/Discovery/Softwave/dl/Thinny/_includes/top.html",
		"/Users/Discovery/Softwave/dl/hpstr-jekyll-theme/_includes/head.html",
		"/Users/Discovery/Softwave/dl/Thinny/_includes/image.html",
		"/Users/Discovery/Softwave/dl/Thinny/_includes/head.html",
		"/Users/Discovery/Softwave/site/_sass/style.scss",
		"/Users/Discovery/Softwave/site/_layouts/post.html",
		"/Users/Discovery/Softwave/site/public/css/lanyon.css",
		"/Users/Discovery/Softwave/site/_layouts/default.html",
		"/Users/Discovery/Softwave/site/_layouts/page.html",
		"/Users/Discovery/Softwave/site/_includes/head.html",
		"/Users/Discovery/Softwave/site/public/css/style.scss",
		"/Users/Discovery/Softwave/site/_includes/sidebar.html",
		"/Users/Discovery/Softwave/jekyll/hpstr/_config.yml",
		"/Users/Discovery/Softwave/site/_data/navigation.yml",
		"/Users/Discovery/Softwave/site/index.md",
		"/Users/Discovery/Softwave/site/_layouts/main.html",
		"/Users/Discovery/Softwave/site/_layouts/home.html",
		"/Users/Discovery/Softwave/site/_posts/articles/2014-02-17-welcome-to-jekyll.md",
		"/Users/Discovery/Softwave/site/_data/authors.yml",
		"/Users/Discovery/Softwave/site/portfolio/index.md",
		"/Users/Discovery/Softwave/site/_data/footer.yml",
		"/Users/Discovery/Softwave/site/media/index.md",
		"/Users/Discovery/Softwave/site/portfolio.md",
		"/Users/Discovery/Softwave/site/_config.yml",
		"/Users/Discovery/Softwave/site/_sass/_variables.scss",
		"/Users/Discovery/Softwave/site/theme-setup/index.md",
		"/Users/Discovery/Softwave/site/_layouts/post-index.html",
		"/Users/Discovery/Softwave/site/about/index.md",
		"/Users/Discovery/Softwave/jekyll/hpstr/info.md",
		"/Users/Discovery/Softwave/site/posts/index.html",
		"/Users/Discovery/Softwave/site/wonk/index.html",
		"/Users/Discovery/Softwave/jekyll/hpstr/index.html",
		"/Users/Discovery/LiveCoding/junk/threePhysics/js/Main.js",
		"/Users/Discovery/LiveCoding/dl/canon/demos/raycastVehicle.html",
		"/Users/Discovery/LiveCoding/junk/p.coffee",
		"/Users/Discovery/LiveCoding/carGame/js/Helpers.js",
		"/Users/Discovery/Workspace/OpenFrameworks/of_v0.8.4_osx_release/apps/myApps/mySketch/src/ofApp.cpp",
		"/Users/Discovery/Workspace/OpenFrameworks/of_v0.8.4_osx_release/apps/myApps/TestSketch/src/ofApp.cpp",
		"/Users/Discovery/Workspace/OpenFrameworks/of_v0.8.4_osx_release/apps/myApps/playing/src/main.cpp",
		"/Users/Discovery/LiveCoding/wagner/js/Main.js",
		"/Users/Discovery/LiveCoding/starters/threeShader/assets/shaders/fShader.glsl",
		"/Users/Discovery/LiveCoding/wagner/lib/demo.html",
		"/Users/Discovery/LiveCoding/wagner/lib/basic.js",
		"/Users/Discovery/LiveCoding/wagner/lib/examples/dof.html",
		"/Users/Discovery/LiveCoding/wagner/lib/examples/ssao.html",
		"/Users/Discovery/LiveCoding/car2/js/Main.js",
		"/Users/Discovery/LiveCoding/wagner/lib/demo.js",
		"/Users/Discovery/LiveCoding/wagner/js/Old.js",
		"/Users/Discovery/LiveCoding/carGame/index.html",
		"/Users/Discovery/LiveCoding/starters/threeBasic/js/Main.js",
		"/Users/Discovery/LiveCoding/carGame/css/style.css",
		"/Users/Discovery/LiveCoding/starters/threeBasic/css/style.css",
		"/Users/Discovery/Downloads/urho/Source/Samples/06_SkeletalAnimation/CMakeLists.txt",
		"/Users/Discovery/Downloads/urho/Source/Samples/CMakeLists.txt",
		"/Users/Discovery/Downloads/urho/Bin/Data/Scripts/04_StaticScene.asc",
		"/Users/Discovery/Downloads/Urho3D-1.32/Bin/Data/Scripts/NinjaSnowWar.as",
		"/Users/Discovery/Downloads/Urho3D-1.32/Bin/Data/Scripts/04_StaticScene.as",
		"/Users/Discovery/Downloads/Urho3D-1.32/Bin/Data/Scripts/18_CharacterDemo.as",
		"/Users/Discovery/Downloads/Urho3D-1.32/Bin/Data/Scripts/NinjaSnowWar/GameObject.as",
		"/Users/Discovery/Downloads/Urho3D-1.32/Bin/Data/Scripts/NinjaSnowWar/Player.as",
		"/Users/Discovery/Downloads/simple/conf.lua",
		"/Users/Discovery/Downloads/simple/main.lua",
		"/Users/Discovery/Downloads/test/main.lua",
		"/Users/Discovery/LiveCoding/carGame/README.md",
		"/Users/Discovery/LiveCoding/carGame/readme.md",
		"/Users/Discovery/LiveCoding/car2/css/style.css",
		"/Users/Discovery/LiveCoding/starters/threeBasic/index.html",
		"/Users/Discovery/LiveCoding/car2/index.html",
		"/Users/Discovery/LiveCoding/editor/editor/js/Script.js",
		"/Users/Discovery/LiveCoding/editor/editor/js/Player.js",
		"/Users/Discovery/LiveCoding/editor/editor/js/Menubar.File.js",
		"/Users/Discovery/LiveCoding/editor/editor/js/libs/jszip.min.js",
		"/Users/Discovery/LiveCoding/editor/plans.txt",
		"/Users/Discovery/LiveCoding/editor/editor/js/libs/codemirror/codemirror.css",
		"/Users/Discovery/LiveCoding/editor/editor/js/libs/app.js",
		"/Users/Discovery/LiveCoding/editor/stuff/pong.js",
		"/Users/Discovery/LiveCoding/editor/editor/js/Menubar.Examples.js",
		"/Users/Discovery/LiveCoding/editor/editor/js/Editor.js",
		"/Users/Discovery/LiveCoding/fx/js/fx/BloomPass.js",
		"/Users/Discovery/LiveCoding/pForge/css/style.css",
		"/Users/Discovery/LiveCoding/pForge/index.html",
		"/Users/Discovery/LiveCoding/physics/js/Main.js",
		"/Users/Discovery/LiveCoding/physics/js/physicsStarter.js",
		"/Users/Discovery/LiveCoding/physics/assets/shaders/start.glsl",
		"/Users/Discovery/LiveCoding/physics/assets/shaders/vertex.glsl",
		"/Users/Discovery/LiveCoding/physics/assets/shaders/vertex2.glsl",
		"/Users/Discovery/LiveCoding/physics/assets/shaders/test.glsl",
		"/Users/Discovery/LiveCoding/physics/js/shaderStarter.js",
		"/Users/Discovery/LiveCoding/physics/css/style.css",
		"/Users/Discovery/LiveCoding/Old/Shader/Main.js",
		"/Users/Discovery/LiveCoding/Old/Shader/assets/shaders/Beam.glsl",
		"/Users/Discovery/LiveCoding/Old/Shader/assets/shaders/Dots.glsl",
		"/Users/Discovery/LiveCoding/dl/ShaderLoader-gh-pages/shaders/vs-displacement.glsl",
		"/Users/Discovery/LiveCoding/physics/js/start.js",
		"/Users/Discovery/LiveCoding/physics/js/untitled",
		"/Users/Discovery/Server/food.txt",
		"/Users/Discovery/Documents/Temp/Weird2/Worlds Worst Car - Rev0.lua",
		"/Users/Discovery/LiveCoding/experiments/editor/examples/wat.app.json",
		"/Users/Discovery/LiveCoding/test/perlin.js",
		"/Users/Discovery/LiveCoding/threeStarter/Main.js",
		"/Users/Discovery/LiveCoding/test/stars.js",
		"/Users/Discovery/LiveCoding/test/Main.js",
		"/Users/Discovery/LiveCoding/test/Cloud.js",
		"/Users/Discovery/LiveCoding/experiments/editor/examples/pong.app.json",
		"/Users/Discovery/LiveCoding/experiments/editor/examples/cloud.app.json",
		"/Users/Discovery/LiveCoding/experiments/random/c.js",
		"/Users/Discovery/LiveCoding/coffee/Main.coffee",
		"/Users/Discovery/LiveCoding/coffee/Main.js",
		"/Users/Discovery/LiveCoding/coffee/js/Main.js"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"home",
			"clean",
			"350px",
			"350",
			"image",
			"build",
			"snuff",
			"rebuild",
			"chfshape",
			"maketerrain",
			"terrain",
			"guidedFullBoxBlurPass",
			"depthTex",
			"depth",
			"fxaa",
			"data",
			"uniforms",
			"controls",
			"onend",
			"refre",
			"loop",
			"activenode.buffer",
			"buffersou",
			"play",
			"refresh",
			"loop",
			"rate",
			"camRot",
			"grav",
			"camera",
			"camrot",
			"camera",
			"camRot",
			"model",
			"chassisBody",
			"chassis",
			"../examples",
			"save",
			"save;",
			"save",
			"domele",
			"dat.gui",
			"params.load",
			"get:",
			"get",
			"params.load",
			"load",
			"load()",
			"locals",
			"save_dialogue",
			"savedialog",
			"getSaveOB",
			"remember",
			"local",
			"params",
			"load",
			"var button",
			"revert",
			"reset",
			"button",
			"get",
			"this",
			"raycas",
			"setfromcamera",
			"raycaster",
			"\n",
			");\n",
			"this.game.input",
			";\n",
			"planema",
			"btn",
			"more",
			"3px",
			"content",
			"border-ra",
			"border-",
			"font-we",
			"shadow",
			"border",
			"Igpay",
			"Text",
			"royal",
			"1",
			"2",
			"3",
			"game",
			"Roids",
			" \n",
			"left",
			"humans",
			"1",
			"Follow",
			"ignore",
			"alpha",
			"building",
			"16",
			"sca",
			"16",
			"1",
			"6",
			"4",
			"font2",
			"1300",
			"autotile",
			"loadmap",
			"339",
			"FlxNapeSprite",
			");\n",
			"= 1",
			"=1",
			"false",
			"space",
			"60",
			"500",
			"8",
			"500",
			" {",
			"space",
			"sprite",
			"\"\";\n",
			"ground",
			"touchi",
			"');\n",
			"editnote",
			"filter",
			" \n",
			"Softwave",
			"*/\n"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"lib\n	gui.add(this, 'lightIntensity', 0, 2.0).name(\"Sun Intensity\").onChange(function(value) {\n		point_light.intensity = value;\n	});\n\n	gui.addColor(this, 'sunColor').name(\"Sun Color\").onChange(function(value) {\n		point_light.color.setHex(value);\n		directionalLight.color.setHex(value);\n	});\n\n	gui.addColor(this, 'color').name(\"Planet Color\").onChange(function(value) {\n		mesh.material.color.setHex(value);\n	});\n\n	gui.addColor(this, 'atmosColor').name(\"Atmosphere Color\").onChange(function(value) {\n		atmosphere.material.uniforms.glowColor.value = new THREE.Color(value);\n	});\n\n	gui.add(this, 'atmosSize', 0, 4.0).name(\"Atmos Size\").onChange(function(value) {\n		atmosphere.scale.set(value,value,value);\n	});\n\n	gui.add(this, 'showAtmosphere').onChange(function(value) {\n		atmosphere.material.visible = value;\n	});\n\n	gui.add(this, 'ringX', 0, 180.0).onChange(function(value) {\n		ring.rotation.x = value * (Math.PI / 180);\n	});\n\n	gui.add(this, 'ringY', 0, 180.0).onChange(function(value) {\n		ring.rotation.y = value * (Math.PI / 180);\n	});\n\n	gui.addColor(this, 'ringColor').name(\"Ring Color\").onChange(function(value) {\n		ring.material.color.setHex(value);\n	});\n\n	gui.remember(this);",
			"pSettings\n	gui.add(this, 'lightIntensity', 0, 2.0).name(\"Sun Intensity\").onChange(function(value) {\n		point_light.intensity = value;\n	});\n\n	gui.addColor(this, 'sunColor').name(\"Sun Color\").onChange(function(value) {\n		point_light.color.setHex(value);\n		directionalLight.color.setHex(value);\n	});\n\n	gui.addColor(this, 'color').name(\"Planet Color\").onChange(function(value) {\n		mesh.material.color.setHex(value);\n	});\n\n	gui.addColor(this, 'atmosColor').name(\"Atmosphere Color\").onChange(function(value) {\n		atmosphere.material.uniforms.glowColor.value = new THREE.Color(value);\n	});\n\n	gui.add(this, 'atmosSize', 0, 4.0).name(\"Atmos Size\").onChange(function(value) {\n		atmosphere.scale.set(value,value,value);\n	});\n\n	gui.add(this, 'showAtmosphere').onChange(function(value) {\n		atmosphere.material.visible = value;\n	});\n\n	gui.add(this, 'ringX', 0, 180.0).onChange(function(value) {\n		ring.rotation.x = value * (Math.PI / 180);\n	});\n\n	gui.add(this, 'ringY', 0, 180.0).onChange(function(value) {\n		ring.rotation.y = value * (Math.PI / 180);\n	});\n\n	gui.addColor(this, 'ringColor').name(\"Ring Color\").onChange(function(value) {\n		ring.material.color.setHex(value);\n	});\n\n	gui.remember(this);",
			"\n	gui.add(this, 'lightIntensity', 0, 2.0).name(\"Sun Intensity\").onChange(function(value) {\n		point_light.intensity = value;\n	});\n\n	gui.addColor(this, 'sunColor').name(\"Sun Color\").onChange(function(value) {\n		point_light.color.setHex(value);\n		directionalLight.color.setHex(value);\n	});\n\n	gui.addColor(this, 'color').name(\"Planet Color\").onChange(function(value) {\n		mesh.material.color.setHex(value);\n	});\n\n	gui.addColor(this, 'atmosColor').name(\"Atmosphere Color\").onChange(function(value) {\n		atmosphere.material.uniforms.glowColor.value = new THREE.Color(value);\n	});\n\n	gui.add(this, 'atmosSize', 0, 4.0).name(\"Atmos Size\").onChange(function(value) {\n		atmosphere.scale.set(value,value,value);\n	});\n\n	gui.add(this, 'showAtmosphere').onChange(function(value) {\n		atmosphere.material.visible = value;\n	});\n\n	gui.add(this, 'ringX', 0, 180.0).onChange(function(value) {\n		ring.rotation.x = value * (Math.PI / 180);\n	});\n\n	gui.add(this, 'ringY', 0, 180.0).onChange(function(value) {\n		ring.rotation.y = value * (Math.PI / 180);\n	});\n\n	gui.addColor(this, 'ringColor').name(\"Ring Color\").onChange(function(value) {\n		ring.material.color.setHex(value);\n	});\n\n	gui.remember(this);",
			"this.input",
			"1",
			"2",
			"Vgame",
			"dudes",
			"0",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "_config.yml",
					"settings":
					{
						"buffer_size": 642,
						"regions":
						{
						},
						"selection":
						[
							[
								512,
								512
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "_posts/2014-01-01-example-content.md",
					"settings":
					{
						"buffer_size": 4576,
						"regions":
						{
						},
						"selection":
						[
							[
								218,
								218
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 71.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "_posts/2014-10-12-newsite.md",
					"settings":
					{
						"buffer_size": 205,
						"regions":
						{
						},
						"selection":
						[
							[
								205,
								205
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "_posts/2015-02-23-updated.md",
					"settings":
					{
						"buffer_size": 75,
						"regions":
						{
						},
						"selection":
						[
							[
								36,
								36
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 201.0
	},
	"output.haskell_sublime_load":
	{
		"height": 152.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 188.0,
	"status_bar_visible": true
}
